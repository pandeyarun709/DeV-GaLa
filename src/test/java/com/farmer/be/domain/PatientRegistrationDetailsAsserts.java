package com.farmer.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PatientRegistrationDetailsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPatientRegistrationDetailsAllPropertiesEquals(
        PatientRegistrationDetails expected,
        PatientRegistrationDetails actual
    ) {
        assertPatientRegistrationDetailsAutoGeneratedPropertiesEquals(expected, actual);
        assertPatientRegistrationDetailsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPatientRegistrationDetailsAllUpdatablePropertiesEquals(
        PatientRegistrationDetails expected,
        PatientRegistrationDetails actual
    ) {
        assertPatientRegistrationDetailsUpdatableFieldsEquals(expected, actual);
        assertPatientRegistrationDetailsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPatientRegistrationDetailsAutoGeneratedPropertiesEquals(
        PatientRegistrationDetails expected,
        PatientRegistrationDetails actual
    ) {
        assertThat(actual)
            .as("Verify PatientRegistrationDetails auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPatientRegistrationDetailsUpdatableFieldsEquals(
        PatientRegistrationDetails expected,
        PatientRegistrationDetails actual
    ) {
        assertThat(actual)
            .as("Verify PatientRegistrationDetails relevant properties")
            .satisfies(a -> assertThat(a.getRegistrationId()).as("check registrationId").isEqualTo(expected.getRegistrationId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPatientRegistrationDetailsUpdatableRelationshipsEquals(
        PatientRegistrationDetails expected,
        PatientRegistrationDetails actual
    ) {
        assertThat(actual)
            .as("Verify PatientRegistrationDetails relationships")
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()))
            .satisfies(a -> assertThat(a.getHospital()).as("check hospital").isEqualTo(expected.getHospital()))
            .satisfies(a -> assertThat(a.getReferredBy()).as("check referredBy").isEqualTo(expected.getReferredBy()));
    }
}
